import Head from 'next/head'
import Hero from '../../components/Hero';
import Carousel from '../../components/Carousel';
import { useEffect, useState } from 'react';
import useWindowMobile from '../../hooks/useWindowMobile';

export async function getServerSideProps(context) {
    const { id } = context.query;

    async function fetchData(fetchUrl) {
        const res = await fetch(fetchUrl)
        const data = await res.json();
        return data;
    }

    const data = await fetchData(`https://api.themoviedb.org/3/movie/${id}?api_key=${process.env.API_KEY}&language=en-US`)
    const trailer = await fetchData(`https://api.themoviedb.org/3/movie/${id}/videos?api_key=${process.env.API_KEY}&language=en-US`)
    const credits = await fetchData(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${process.env.API_KEY}&language=en-US`)
    const recommendations = await fetchData(`https://api.themoviedb.org/3/movie/${id}/recommendations?api_key=${process.env.API_KEY}&language=en-US&page=1`)
    //const movieCredsForPerson = await fetchData(`https://api.themoviedb.org/3/person/${57409}/movie_credits?api_key=${process.env.API_KEY}&language=en-US`)

    return {
        props: {
            movie: { data, trailer },
            credits,
            recommendations
        },
    };
}

export default function Movie({ movie, credits, recommendations }) {
    const isMobile = useWindowMobile();
    //console.log(credits)
    const [hasData, setHasData] = useState(false);
    
    useEffect(() => {
        async function hasNecessaryData() {
            if (credits.cast.length !== 0) {
                let counter = 0;
                credits.cast.map((element) => {
                    if (element.profile_path !== null) {
                        counter++;
                    }
                })
                counter > 0 ? setHasData(true) : setHasData(false);
            }
        }
        hasNecessaryData()
    }, [credits]);

    return (
        <>
            <Head>
                <title>Movie &quot;{movie.data?.original_title}&quot; | MovieSpot</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <Hero movie={movie} h={90} />

            <>
                {hasData &&
                    <Carousel
                        title={"Cast"}
                        type={"Credits"}
                        cardHeight={230}
                        cardWidth={150}
                        data={credits}
                    />
                }
                {
                    recommendations.total_results > 0 &&
                    <Carousel
                        title={"Recommendations"}
                        cardHeight={isMobile ? 230 : 400} 
                        cardWidth={isMobile ? 150 : 270}
                        data={recommendations}
                    />
                }
            </>
        </>
    )
}
