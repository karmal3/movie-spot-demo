import Head from 'next/head'
import { useRouter } from "next/router"
import Card from '../../components/Card';

export async function getServerSideProps(context) {
    const { id, page } = context.query;
    // Fetch data from external API

    const res = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${process.env.API_KEY}&language=en-US&query=${id}&page=${page}&include_adult=false`)
    const data = await res.json();

    // Pass data to the page via props
    return {
        props: {
            search: { data, id, page },
        },
    };
}

export default function Search({ search }) {
    const router = useRouter();
    //console.log(search.id)

    const searchResultsPages = () => {
        var pages = [];
        for (let i = 1; i <= search.data.total_pages; i++) {
            pages.push(
                <button
                    key={i}
                    onClick={() => handlePage(i)}
                    className={`${i == search.page ? "bg-red-600 -skew-x-12" : "bg-gray-800 -skew-x-12 hover:bg-red-500"} text-white font-semibold text-xs w-8 h-8 rounded-sm`}>
                    {i}
                </button>
            );
        }
        return pages;
    }

    const handlePage = (p) => {
        const { total_pages } = search.data;

        if (total_pages > 1 && p <= total_pages) {
            router.push(`/search/${search.id}/?page=${p}`)
            window.scroll({
                top: 0,
                behavior: 'smooth'
            });
        }
    }
    return (
        <>
            <Head>
                <title>Search &quot;{search.id}&quot; | MovieSpot</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            {
                search.data?.results.length === 0 ?
                    <div className='flex flex-col px-5 sm:px-10 py-10 justify-center items-center min-h-screen'>
                        <div className='flex flex-col items-start'>
                            <h1 className="text-gray-300 font-thin text-6xl bg-red-700 p-4">Nothing was found</h1>
                            <span className="text-gray-300 font-thin text-xl">Try to change your search request, check that you have entered the search name correctly.</span>
                        </div>

                    </div>
                    :
                    <div className="flex flex-col px-5 sm:px-10 py-10 space-y-4">

                        <div className='flex items-center gap-1 text-lg font-extralight'>
                            <span className='text-red-600 text-lg font-semibold'>|</span>
                            <h1 className="text-gray-300">Search results for: {search.id}</h1>
                        </div>

                        <div className="grid justify-items-center grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 xl:grid-cols-7 2xl:grid-cols-9">
                            {
                                search.data?.results?.map((searchResult, index) => (
                                    (searchResult.backdrop_path !== null || searchResult.poster_path !== null) &&
                                    <Card key={index} data={searchResult} w={150} h={230} />

                                ))
                            }
                        </div>
                        <div className="flex justify-center items-center space-x-1 py-8">
                            <button onClick={() => search.page != 1 && handlePage(parseInt(search.page) - 1)}>
                                <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6 -skew-x-12 text-gray-300 hover:text-red-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 19l-7-7 7-7" />
                                </svg>
                            </button>
                            {
                                searchResultsPages()
                            }
                            <button onClick={() => handlePage(parseInt(search.page) + 1)}>
                                <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6 -skew-x-12 text-gray-300 hover:text-red-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
                                </svg>
                            </button>

                        </div>
                    </div>
            }

        </>
    );
}
